import Head from 'next/head'
import Image from 'next/image'
import CallToAction from '../components/CallToAction'
import Header from '../components/Header'
import Storyblok, {useStoryblok} from '../lib/storyblok'

import styles from '../styles/Home.module.css'

function Home({  story }) {
  const enableBridge = true; // load the storyblok bridge everywhere

  story = useStoryblok(story, enableBridge);
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        {story.content.body.map(function(component, i) {
            //console.log(component.component)
            if (component.component == "Header") {
              return <Header key={component._uid} {...component} />
            }

          })}


        <div className={styles.grid}>
          {story.content.body.map(function(cta, i) {
            if (cta.component == "Call To Action") {
              return <CallToAction key={cta._uid} {...cta} />
            }

          })}
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}
// This function gets called at build time on server-side.
// It won't be called on client-side, so you can even do
// direct database queries.
export async function getStaticProps() {
  let preview = process.env.PREVIEW === 'true'
  // home is the default slug for the homepage in Storyblok
  let slug = 'home'
  // load the published content outside of the preview mode
  let sbParams = {
    version: 'published', // or 'published'
  }

  if (preview) {
    // load the draft version inside of the preview mode
    sbParams.version = 'draft'
    sbParams.cv = Date.now()
  }

  let {data} = await Storyblok.get(`cdn/stories/${slug}`, sbParams)


//console.log(data?.story.content.body)

  // By returning { props: { ctas } }, the CallToAction components
  // will receive `ctas` as a prop at build time
  // Strong Assumption: in the story
  // data?.story?.content?.body
  // there are Call To Action Components
  return {
    props: {
      story: data ? data.story : false,
      //story: data?.story.content.body,
      //ctas: data?.story?.content?.body ? data?.story?.content?.body : [],
      preview,

    },
    revalidate: 3600, // revalidate every hour
  }
}
export default Home